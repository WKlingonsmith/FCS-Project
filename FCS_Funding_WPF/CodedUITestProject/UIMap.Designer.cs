// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Start up the program, login, insert a patient.
        /// </summary>
        public void TestpatientInsert()
        {
            #region Variable Declarations
            WpfEdit uIItemEdit = this.UILoginWindow.UIItemEdit;
            WpfEdit uIItemEdit1 = this.UILoginWindow.UIItemEdit1;
            WpfButton uILoginButton = this.UILoginWindow.UILoginButton;
            WpfTabPage uIPatientsTabPage = this.UIMainWindowWindow.UIItemTabList.UIPatientsTabPage;
            WpfButton uICreateNewPatientButton = this.UIMainWindowWindow.UIItemTabList.UIPatientsTabPage.UICreateNewPatientButton;
            WpfEdit uIItemEdit2 = this.UICreateNewPatientWindow.UIItemEdit;
            WpfComboBox uIGenderComboBox = this.UICreateNewPatientWindow.UIGenderComboBox;
            WpfComboBox uIAgeGroupComboBox = this.UICreateNewPatientWindow.UIAgeGroupComboBox;
            WpfEdit uIItemEdit11 = this.UICreateNewPatientWindow.UIItemEdit1;
            WpfEdit uIItemEdit21 = this.UICreateNewPatientWindow.UIItemEdit2;
            WpfWindow uICreateNewPatientWindow = this.UICreateNewPatientWindow;
            WpfComboBox uIEthnicityComboBox = this.UICreateNewPatientWindow.UIEthnicityComboBox;
            WpfEdit uIItemEdit3 = this.UICreateNewPatientWindow.UIItemEdit3;
            WpfCheckBox uIIsHeadofHouseholdCheckBox = this.UICreateNewPatientWindow.UIIsHeadofHouseholdCheckBox;
            WpfCheckBox uIFirstMemberofHousehoCheckBox = this.UICreateNewPatientWindow.UIFirstMemberofHousehoCheckBox;
            WpfButton uIAddClientButton = this.UICreateNewPatientWindow.UIAddClientButton;
            WpfEdit uIItemEdit4 = this.UICreateHouseholdWindow.UIItemEdit;
            WpfEdit uIItemEdit12 = this.UICreateHouseholdWindow.UIItemEdit1;
            WpfComboBox uIIncomeComboBox = this.UICreateHouseholdWindow.UIIncomeComboBox;
            WpfButton uIAddHouseholdButton = this.UICreateHouseholdWindow.UIAddHouseholdButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            WpfButton uIRefreshButton = this.UIMainWindowWindow.UIItemTabList.UIPatientsTabPage.UIRefreshButton;
            #endregion

            // Launch '%ProgramFiles%\Microsoft Visual Studio 14.0\Common7\IDE\PrivateAssemblies\ScriptedSandbox64.exe' with arguments '"Software\Microsoft\VisualStudio\14.0\ScriptedPlugins" "Software\Microsoft\VisualStudio\14.0_Config\ScriptedPlugins" d0352 2b98 "file:///C:/Program Files (x86)/Microsoft Visual Studio 14.0/Common7/IDE/PrivateAssemblies/plugin.vs.js"'
            ApplicationUnderTest scriptedSandbox64Application = ApplicationUnderTest.Launch(this.TestpatientInsertParams.ExePath, this.TestpatientInsertParams.AlternateExePath, "\"Software\\Microsoft\\VisualStudio\\14.0\\ScriptedPlugins\" \"Software\\Microsoft\\Visual" +
                    "Studio\\14.0_Config\\ScriptedPlugins\" d0352 2b98 \"file:///C:/Program Files (x86)/M" +
                    "icrosoft Visual Studio 14.0/Common7/IDE/PrivateAssemblies/plugin.vs.js\"");

            // Element not available

            // Type 'username' in text box
            uIItemEdit.Text = this.TestpatientInsertParams.UIItemEditText;

            // Click text box numbered 2 in 'Login' window
            Mouse.Click(uIItemEdit1, new Point(59, 21));

            // Type '********' in text box numbered 2 in 'Login' window
            Keyboard.SendKeys(uIItemEdit1, this.TestpatientInsertParams.UIItemEdit1SendKeys, true);

            // Click 'Login' button
            Mouse.Click(uILoginButton, new Point(32, 34));

            // Click 'Patients' tab
            Mouse.Click(uIPatientsTabPage, new Point(136, 45));

            // Click 'Create New Patient' button
            Mouse.Click(uICreateNewPatientButton, new Point(138, 36));

            // Type '55' in text box
            uIItemEdit2.Text = this.TestpatientInsertParams.UIItemEditText1;

            // Select 'Other' in 'Gender' combo box
            uIGenderComboBox.SelectedItem = this.TestpatientInsertParams.UIGenderComboBoxSelectedItem;

            // Select '24-44' in 'AgeGroup' combo box
            uIAgeGroupComboBox.SelectedItem = this.TestpatientInsertParams.UIAgeGroupComboBoxSelectedItem;

            // Type 'Kenneth' in text box numbered 2 in 'CreateNewPatient' window
            uIItemEdit11.Text = this.TestpatientInsertParams.UIItemEdit1Text;

            // Type 'Adair' in text box numbered 3 in 'CreateNewPatient' window
            uIItemEdit21.Text = this.TestpatientInsertParams.UIItemEdit2Text;

            // Move text box numbered 3 in 'CreateNewPatient' window to 'CreateNewPatient' window
            uICreateNewPatientWindow.EnsureClickable(new Point(469, 462));
            Mouse.StartDragging(uIItemEdit21, new Point(137, 27));
            Mouse.StopDragging(uICreateNewPatientWindow, new Point(469, 462));

            // Select 'Hispanic' in 'ethnicity' combo box
            uIEthnicityComboBox.SelectedItem = this.TestpatientInsertParams.UIEthnicityComboBoxSelectedItem;

            // Type 'Kid' in text box numbered 4 in 'CreateNewPatient' window
            uIItemEdit3.Text = this.TestpatientInsertParams.UIItemEdit3Text;

            // Select 'Is Head of Household?' check box
            uIIsHeadofHouseholdCheckBox.Checked = this.TestpatientInsertParams.UIIsHeadofHouseholdCheckBoxChecked;

            // Select 'First Member of Household?' check box
            uIFirstMemberofHousehoCheckBox.Checked = this.TestpatientInsertParams.UIFirstMemberofHousehoCheckBoxChecked;

            // Click 'Add Client' button
            Mouse.Click(uIAddClientButton, new Point(112, 33));

            // Type '5' in text box
            uIItemEdit4.Text = this.TestpatientInsertParams.UIItemEditText2;

            // Type 'Davis' in text box numbered 2 in 'CreateHousehold' window
            uIItemEdit12.Text = this.TestpatientInsertParams.UIItemEdit1Text1;

            // Select '$35,000+' in 'income' combo box
            uIIncomeComboBox.SelectedItem = this.TestpatientInsertParams.UIIncomeComboBoxSelectedItem;

            // Click 'Add Household' button
            Mouse.Click(uIAddHouseholdButton, new Point(165, 35));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(35, 22));

            // Click 'Refresh' button
            Mouse.Click(uIRefreshButton, new Point(94, 48));

            // The control is not available or not valid.

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Last action on Row was not recorded because the control does not have any good identification property.
        }
        
        /// <summary>
        /// Opens the program, navigates to the patient tab, clicks "Create New Patient", creates the new patient, and then hits refresh.  Currently there isn't a way to test of the thing was inserted.
        /// </summary>
        public void insertTest()
        {
            #region Variable Declarations
            WpfButton uILoginButton = this.UILoginWindow.UILoginButton;
            WpfButton uICreateNewPatientButton = this.UIMainWindowWindow.UIItemTabList.UIPatientsTabPage.UICreateNewPatientButton;
            WpfEdit uIItemEdit = this.UICreateNewPatientWindow.UIItemEdit;
            WpfEdit uIItemEdit1 = this.UICreateNewPatientWindow.UIItemEdit1;
            WpfEdit uIItemEdit2 = this.UICreateNewPatientWindow.UIItemEdit2;
            WpfEdit uIItemEdit3 = this.UICreateNewPatientWindow.UIItemEdit3;
            WpfComboBox uIGenderComboBox = this.UICreateNewPatientWindow.UIGenderComboBox;
            WpfComboBox uIAgeGroupComboBox = this.UICreateNewPatientWindow.UIAgeGroupComboBox;
            WpfComboBox uIEthnicityComboBox = this.UICreateNewPatientWindow.UIEthnicityComboBox;
            WpfCheckBox uIIsHeadofHouseholdCheckBox = this.UICreateNewPatientWindow.UIIsHeadofHouseholdCheckBox;
            WpfCheckBox uIFirstMemberofHousehoCheckBox = this.UICreateNewPatientWindow.UIFirstMemberofHousehoCheckBox;
            WpfEdit uIFamily_OQEdit = this.UICreateNewPatientWindow.UIFamily_OQEdit;
            WpfButton uIAddClientButton = this.UICreateNewPatientWindow.UIAddClientButton;
            WpfEdit uIItemEdit4 = this.UICreateHouseholdWindow.UIItemEdit;
            WpfEdit uIItemEdit11 = this.UICreateHouseholdWindow.UIItemEdit1;
            WpfComboBox uIIncomeComboBox = this.UICreateHouseholdWindow.UIIncomeComboBox;
            WpfButton uIAddHouseholdButton = this.UICreateHouseholdWindow.UIAddHouseholdButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            WpfButton uIRefreshButton = this.UIMainWindowWindow.UIItemTabList.UIPatientsTabPage.UIRefreshButton;
            #endregion

            // Click 'Login' button
            Mouse.Click(uILoginButton, new Point(84, 34));

            // Click 'Create New Patient' button
            Mouse.Click(uICreateNewPatientButton, new Point(172, 33));

            // Type '5' in text box
            uIItemEdit.Text = this.insertTestParams.UIItemEditText;

            // Type 'myTest' in text box numbered 2 in 'CreateNewPatient' window
            uIItemEdit1.Text = this.insertTestParams.UIItemEdit1Text;

            // Type 'myTestLastName' in text box numbered 3 in 'CreateNewPatient' window
            uIItemEdit2.Text = this.insertTestParams.UIItemEdit2Text;

            // Type 'stepchild' in text box numbered 4 in 'CreateNewPatient' window
            uIItemEdit3.Text = this.insertTestParams.UIItemEdit3Text;

            // Select 'Other' in 'Gender' combo box
            uIGenderComboBox.SelectedItem = this.insertTestParams.UIGenderComboBoxSelectedItem;

            // Select '70+' in 'AgeGroup' combo box
            uIAgeGroupComboBox.SelectedItem = this.insertTestParams.UIAgeGroupComboBoxSelectedItem;

            // Select 'Other' in 'ethnicity' combo box
            uIEthnicityComboBox.SelectedItem = this.insertTestParams.UIEthnicityComboBoxSelectedItem;

            // Select 'Is Head of Household?' check box
            uIIsHeadofHouseholdCheckBox.Checked = this.insertTestParams.UIIsHeadofHouseholdCheckBoxChecked;

            // Select 'First Member of Household?' check box
            uIFirstMemberofHousehoCheckBox.Checked = this.insertTestParams.UIFirstMemberofHousehoCheckBoxChecked;

            // Click 'Family_OQ' text box
            Mouse.Click(uIFamily_OQEdit, new Point(82, 21));

            // Click 'Add Client' button
            Mouse.Click(uIAddClientButton, new Point(101, 30));

            // Type '3' in text box
            uIItemEdit4.Text = this.insertTestParams.UIItemEditText1;

            // Type 'myCounty' in text box numbered 2 in 'CreateHousehold' window
            uIItemEdit11.Text = this.insertTestParams.UIItemEdit1Text1;

            // Select '$35,000+' in 'income' combo box
            uIIncomeComboBox.SelectedItem = this.insertTestParams.UIIncomeComboBoxSelectedItem;

            // Click 'Add Household' button
            Mouse.Click(uIAddHouseholdButton, new Point(166, 43));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(40, 19));

            // Click 'Refresh' button
            Mouse.Click(uIRefreshButton, new Point(72, 46));
        }
        
        /// <summary>
        /// Adds Satan into the database.  No assertions yet.
        /// </summary>
        public void TestpatientInsert2()
        {
            #region Variable Declarations
            WpfButton uILoginButton = this.UILoginWindow.UILoginButton;
            WpfButton uICreateNewPatientButton = this.UIMainWindowWindow.UIItemTabList.UIPatientsTabPage.UICreateNewPatientButton;
            WpfEdit uIItemEdit = this.UICreateNewPatientWindow.UIItemEdit;
            WpfEdit uIItemEdit1 = this.UICreateNewPatientWindow.UIItemEdit1;
            WpfEdit uIItemEdit2 = this.UICreateNewPatientWindow.UIItemEdit2;
            WpfEdit uIItemEdit3 = this.UICreateNewPatientWindow.UIItemEdit3;
            WpfCheckBox uIIsHeadofHouseholdCheckBox = this.UICreateNewPatientWindow.UIIsHeadofHouseholdCheckBox;
            WpfCheckBox uIFirstMemberofHousehoCheckBox = this.UICreateNewPatientWindow.UIFirstMemberofHousehoCheckBox;
            WpfComboBox uIGenderComboBox = this.UICreateNewPatientWindow.UIGenderComboBox;
            WpfComboBox uIAgeGroupComboBox = this.UICreateNewPatientWindow.UIAgeGroupComboBox;
            WpfComboBox uIEthnicityComboBox = this.UICreateNewPatientWindow.UIEthnicityComboBox;
            WpfButton uIAddClientButton = this.UICreateNewPatientWindow.UIAddClientButton;
            WpfEdit uIItemEdit4 = this.UICreateHouseholdWindow.UIItemEdit;
            WpfEdit uIItemEdit11 = this.UICreateHouseholdWindow.UIItemEdit1;
            WpfComboBox uIIncomeComboBox = this.UICreateHouseholdWindow.UIIncomeComboBox;
            WpfButton uIAddHouseholdButton = this.UICreateHouseholdWindow.UIAddHouseholdButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            #endregion

            // Launch '%ProgramFiles%\Microsoft Visual Studio 14.0\Common7\IDE\PrivateAssemblies\ScriptedSandbox64.exe' with arguments '"Software\Microsoft\VisualStudio\14.0\ScriptedPlugins" "Software\Microsoft\VisualStudio\14.0_Config\ScriptedPlugins" 110418 e70 "file:///C:/Program Files (x86)/Microsoft Visual Studio 14.0/Common7/IDE/PrivateAssemblies/plugin.vs.js"'
            ApplicationUnderTest scriptedSandbox64Application = ApplicationUnderTest.Launch(this.TestpatientInsert2Params.ExePath, this.TestpatientInsert2Params.AlternateExePath, "\"Software\\Microsoft\\VisualStudio\\14.0\\ScriptedPlugins\" \"Software\\Microsoft\\Visual" +
                    "Studio\\14.0_Config\\ScriptedPlugins\" 110418 e70 \"file:///C:/Program Files (x86)/M" +
                    "icrosoft Visual Studio 14.0/Common7/IDE/PrivateAssemblies/plugin.vs.js\"");

            // Click 'Login' button
            Mouse.Click(uILoginButton, new Point(135, 31));

            // Click 'Create New Patient' button
            Mouse.Click(uICreateNewPatientButton, new Point(171, 19));

            // Type '666' in text box
            uIItemEdit.Text = this.TestpatientInsert2Params.UIItemEditText;

            // Type 'Satan' in text box numbered 2 in 'CreateNewPatient' window
            uIItemEdit1.Text = this.TestpatientInsert2Params.UIItemEdit1Text;

            // Type '{Tab}' in text box numbered 2 in 'CreateNewPatient' window
            Keyboard.SendKeys(uIItemEdit1, this.TestpatientInsert2Params.UIItemEdit1SendKeys, ModifierKeys.None);

            // Type 'Test' in text box numbered 3 in 'CreateNewPatient' window
            uIItemEdit2.Text = this.TestpatientInsert2Params.UIItemEdit2Text;

            // Type 'Lord of Darkness' in text box numbered 4 in 'CreateNewPatient' window
            uIItemEdit3.Text = this.TestpatientInsert2Params.UIItemEdit3Text;

            // Select 'Is Head of Household?' check box
            uIIsHeadofHouseholdCheckBox.Checked = this.TestpatientInsert2Params.UIIsHeadofHouseholdCheckBoxChecked;

            // Select 'First Member of Household?' check box
            uIFirstMemberofHousehoCheckBox.Checked = this.TestpatientInsert2Params.UIFirstMemberofHousehoCheckBoxChecked;

            // Select 'Other' in 'Gender' combo box
            uIGenderComboBox.SelectedItem = this.TestpatientInsert2Params.UIGenderComboBoxSelectedItem;

            // Select '0-5' in 'AgeGroup' combo box
            uIAgeGroupComboBox.SelectedItem = this.TestpatientInsert2Params.UIAgeGroupComboBoxSelectedItem;

            // Select 'Other' in 'ethnicity' combo box
            uIEthnicityComboBox.SelectedItem = this.TestpatientInsert2Params.UIEthnicityComboBoxSelectedItem;

            // Click 'Add Client' button
            Mouse.Click(uIAddClientButton, new Point(144, 41));

            // Type '1' in text box
            uIItemEdit4.Text = this.TestpatientInsert2Params.UIItemEditText1;

            // Type 'Hell' in text box numbered 2 in 'CreateHousehold' window
            uIItemEdit11.Text = this.TestpatientInsert2Params.UIItemEdit1Text1;

            // Type '1000000' in text box
            uIItemEdit4.Text = this.TestpatientInsert2Params.UIItemEditText2;

            // Select '$35,000+' in 'income' combo box
            uIIncomeComboBox.SelectedItem = this.TestpatientInsert2Params.UIIncomeComboBoxSelectedItem;

            // Click 'Add Household' button
            Mouse.Click(uIAddHouseholdButton, new Point(222, 21));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(90, 7));
        }
        
        /// <summary>
        /// TestOpeningProgram - Use 'TestOpeningProgramParams' to pass parameters into this method.
        /// </summary>
        public void TestOpeningProgram()
        {
            #region Variable Declarations
            WpfButton uILoginButton = this.UILoginWindow.UILoginButton;
            WpfTabPage uIGrantsTabPage = this.UIMainWindowWindow.UIItemTabList.UIGrantsTabPage;
            #endregion

            // Launch '%USERPROFILE%\Desktop\Spring2016\Software Engineering 3\FCS-Funding\FCS_Funding_WPF\FCS_Funding\bin\Debug\FCS_Funding.exe'
            ApplicationUnderTest uILoginWindow = ApplicationUnderTest.Launch(this.TestOpeningProgramParams.UILoginWindowExePath, this.TestOpeningProgramParams.UILoginWindowAlternateExePath);

            // Click 'Login' button
            Mouse.Click(uILoginButton, new Point(105, 26));

            // Click 'Grants' tab
            Mouse.Click(uIGrantsTabPage, new Point(151, 35));
        }
        
        /// <summary>
        /// Open the program, insert a patient that is the head of their own household, close the program.
        /// </summary>
        public void TestInsertPatientGUI()
        {
            #region Variable Declarations
            WpfButton uILoginButton = this.UILoginWindow.UILoginButton;
            WpfButton uICreateNewPatientButton = this.UIMainWindowWindow.UIItemTabList.UIPatientsTabPage.UICreateNewPatientButton;
            WpfEdit uIItemEdit = this.UICreateNewPatientWindow.UIItemEdit;
            WpfComboBox uIGenderComboBox = this.UICreateNewPatientWindow.UIGenderComboBox;
            WpfComboBox uIAgeGroupComboBox = this.UICreateNewPatientWindow.UIAgeGroupComboBox;
            WpfComboBox uIEthnicityComboBox = this.UICreateNewPatientWindow.UIEthnicityComboBox;
            WpfEdit uIItemEdit1 = this.UICreateNewPatientWindow.UIItemEdit1;
            WpfEdit uIItemEdit2 = this.UICreateNewPatientWindow.UIItemEdit2;
            WpfEdit uIItemEdit3 = this.UICreateNewPatientWindow.UIItemEdit3;
            WpfCheckBox uIIsHeadofHouseholdCheckBox = this.UICreateNewPatientWindow.UIIsHeadofHouseholdCheckBox;
            WpfCheckBox uIFirstMemberofHousehoCheckBox = this.UICreateNewPatientWindow.UIFirstMemberofHousehoCheckBox;
            WpfButton uIAddClientButton = this.UICreateNewPatientWindow.UIAddClientButton;
            WpfEdit uIItemEdit4 = this.UICreateHouseholdWindow.UIItemEdit;
            WpfEdit uIItemEdit11 = this.UICreateHouseholdWindow.UIItemEdit1;
            WpfComboBox uIIncomeComboBox = this.UICreateHouseholdWindow.UIIncomeComboBox;
            WpfButton uIAddHouseholdButton = this.UICreateHouseholdWindow.UIAddHouseholdButton;
            WinControl uIItemDialog = this.UIItemWindow.UIItemWindow1.UIItemDialog;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            WinButton uICloseButton = this.UIMainWindowWindow1.UICloseButton;
            #endregion

            // Launch '%USERPROFILE%\Desktop\Spring2016\Software Engineering 3\FCS-Funding\FCS_Funding_WPF\FCS_Funding\bin\Debug\FCS_Funding.exe'
            ApplicationUnderTest uILoginWindow = ApplicationUnderTest.Launch(this.TestInsertPatientGUIParams.UILoginWindowExePath, this.TestInsertPatientGUIParams.UILoginWindowAlternateExePath);

            // Click 'Login' button
            Mouse.Click(uILoginButton, new Point(75, 11));

            // Click 'Create New Patient' button
            Mouse.Click(uICreateNewPatientButton, new Point(224, 36));

            // Type '7562' in text box
            uIItemEdit.Text = this.TestInsertPatientGUIParams.UIItemEditText;

            // Select 'Male' in 'Gender' combo box
            uIGenderComboBox.SelectedItem = this.TestInsertPatientGUIParams.UIGenderComboBoxSelectedItem;

            // Select '55-69' in 'AgeGroup' combo box
            uIAgeGroupComboBox.SelectedItem = this.TestInsertPatientGUIParams.UIAgeGroupComboBoxSelectedItem;

            // Select 'Asian' in 'ethnicity' combo box
            uIEthnicityComboBox.SelectedItem = this.TestInsertPatientGUIParams.UIEthnicityComboBoxSelectedItem;

            // Type 'Fluffy' in text box numbered 2 in 'CreateNewPatient' window
            uIItemEdit1.Text = this.TestInsertPatientGUIParams.UIItemEdit1Text;

            // Type 'Kitten' in text box numbered 3 in 'CreateNewPatient' window
            uIItemEdit2.Text = this.TestInsertPatientGUIParams.UIItemEdit2Text;

            // Type 'Child' in text box numbered 4 in 'CreateNewPatient' window
            uIItemEdit3.Text = this.TestInsertPatientGUIParams.UIItemEdit3Text;

            // Select 'Is Head of Household?' check box
            uIIsHeadofHouseholdCheckBox.Checked = this.TestInsertPatientGUIParams.UIIsHeadofHouseholdCheckBoxChecked;

            // Select 'First Member of Household?' check box
            uIFirstMemberofHousehoCheckBox.Checked = this.TestInsertPatientGUIParams.UIFirstMemberofHousehoCheckBoxChecked;

            // Click 'Add Client' button
            Mouse.Click(uIAddClientButton, new Point(163, 17));

            // Type '5' in text box
            uIItemEdit4.Text = this.TestInsertPatientGUIParams.UIItemEditText1;

            // Type 'Davis' in text box numbered 2 in 'CreateHousehold' window
            uIItemEdit11.Text = this.TestInsertPatientGUIParams.UIItemEdit1Text1;

            // Select '$35,000+' in 'income' combo box
            uIIncomeComboBox.SelectedItem = this.TestInsertPatientGUIParams.UIIncomeComboBoxSelectedItem;

            // Click 'Add Household' button
            Mouse.Click(uIAddHouseholdButton, new Point(212, 40));

            // Click Dialog
            Mouse.Click(uIItemDialog, new Point(202, 402));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(77, 32));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(28, 19));
        }
        
        #region Properties
        public virtual TestpatientInsertParams TestpatientInsertParams
        {
            get
            {
                if ((this.mTestpatientInsertParams == null))
                {
                    this.mTestpatientInsertParams = new TestpatientInsertParams();
                }
                return this.mTestpatientInsertParams;
            }
        }
        
        public virtual insertTestParams insertTestParams
        {
            get
            {
                if ((this.minsertTestParams == null))
                {
                    this.minsertTestParams = new insertTestParams();
                }
                return this.minsertTestParams;
            }
        }
        
        public virtual TestpatientInsert2Params TestpatientInsert2Params
        {
            get
            {
                if ((this.mTestpatientInsert2Params == null))
                {
                    this.mTestpatientInsert2Params = new TestpatientInsert2Params();
                }
                return this.mTestpatientInsert2Params;
            }
        }
        
        public virtual TestOpeningProgramParams TestOpeningProgramParams
        {
            get
            {
                if ((this.mTestOpeningProgramParams == null))
                {
                    this.mTestOpeningProgramParams = new TestOpeningProgramParams();
                }
                return this.mTestOpeningProgramParams;
            }
        }
        
        public virtual TestInsertPatientGUIParams TestInsertPatientGUIParams
        {
            get
            {
                if ((this.mTestInsertPatientGUIParams == null))
                {
                    this.mTestInsertPatientGUIParams = new TestInsertPatientGUIParams();
                }
                return this.mTestInsertPatientGUIParams;
            }
        }
        
        public UILoginWindow UILoginWindow
        {
            get
            {
                if ((this.mUILoginWindow == null))
                {
                    this.mUILoginWindow = new UILoginWindow();
                }
                return this.mUILoginWindow;
            }
        }
        
        public UIMainWindowWindow UIMainWindowWindow
        {
            get
            {
                if ((this.mUIMainWindowWindow == null))
                {
                    this.mUIMainWindowWindow = new UIMainWindowWindow();
                }
                return this.mUIMainWindowWindow;
            }
        }
        
        public UICreateNewPatientWindow UICreateNewPatientWindow
        {
            get
            {
                if ((this.mUICreateNewPatientWindow == null))
                {
                    this.mUICreateNewPatientWindow = new UICreateNewPatientWindow();
                }
                return this.mUICreateNewPatientWindow;
            }
        }
        
        public UICreateHouseholdWindow UICreateHouseholdWindow
        {
            get
            {
                if ((this.mUICreateHouseholdWindow == null))
                {
                    this.mUICreateHouseholdWindow = new UICreateHouseholdWindow();
                }
                return this.mUICreateHouseholdWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow();
                }
                return this.mUIOKWindow;
            }
        }
        
        public UIDebugWindow UIDebugWindow
        {
            get
            {
                if ((this.mUIDebugWindow == null))
                {
                    this.mUIDebugWindow = new UIDebugWindow();
                }
                return this.mUIDebugWindow;
            }
        }
        
        public UIItemWindow2 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow2();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIMainWindowWindow1 UIMainWindowWindow1
        {
            get
            {
                if ((this.mUIMainWindowWindow1 == null))
                {
                    this.mUIMainWindowWindow1 = new UIMainWindowWindow1();
                }
                return this.mUIMainWindowWindow1;
            }
        }
        #endregion
        
        #region Fields
        private TestpatientInsertParams mTestpatientInsertParams;
        
        private insertTestParams minsertTestParams;
        
        private TestpatientInsert2Params mTestpatientInsert2Params;
        
        private TestOpeningProgramParams mTestOpeningProgramParams;
        
        private TestInsertPatientGUIParams mTestInsertPatientGUIParams;
        
        private UILoginWindow mUILoginWindow;
        
        private UIMainWindowWindow mUIMainWindowWindow;
        
        private UICreateNewPatientWindow mUICreateNewPatientWindow;
        
        private UICreateHouseholdWindow mUICreateHouseholdWindow;
        
        private UIOKWindow mUIOKWindow;
        
        private UIDebugWindow mUIDebugWindow;
        
        private UIItemWindow2 mUIItemWindow;
        
        private UIMainWindowWindow1 mUIMainWindowWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestpatientInsert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestpatientInsertParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%ProgramFiles%\Microsoft Visual Studio 14.0\Common7\IDE\PrivateAssemblies\ScriptedSandbox64.exe' with arguments '"Software\Microsoft\VisualStudio\14.0\ScriptedPlugins" "Software\Microsoft\VisualStudio\14.0_Config\ScriptedPlugins" d0352 2b98 "file:///C:/Program Files (x86)/Microsoft Visual Studio 14.0/Common7/IDE/PrivateAssemblies/plugin.vs.js"'
        /// </summary>
        public string ExePath = "C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\PrivateAssemblies" +
            "\\ScriptedSandbox64.exe";
        
        /// <summary>
        /// Launch '%ProgramFiles%\Microsoft Visual Studio 14.0\Common7\IDE\PrivateAssemblies\ScriptedSandbox64.exe' with arguments '"Software\Microsoft\VisualStudio\14.0\ScriptedPlugins" "Software\Microsoft\VisualStudio\14.0_Config\ScriptedPlugins" d0352 2b98 "file:///C:/Program Files (x86)/Microsoft Visual Studio 14.0/Common7/IDE/PrivateAssemblies/plugin.vs.js"'
        /// </summary>
        public string AlternateExePath = "%ProgramFiles%\\Microsoft Visual Studio 14.0\\Common7\\IDE\\PrivateAssemblies\\Scripte" +
            "dSandbox64.exe";
        
        /// <summary>
        /// Type 'username' in text box
        /// </summary>
        public string UIItemEditText = "username";
        
        /// <summary>
        /// Type '********' in text box numbered 2 in 'Login' window
        /// </summary>
        public string UIItemEdit1SendKeys = "QWwOodIXpSM441BCNCWNvH9k+8fhegdI";
        
        /// <summary>
        /// Type '55' in text box
        /// </summary>
        public string UIItemEditText1 = "55";
        
        /// <summary>
        /// Select 'Other' in 'Gender' combo box
        /// </summary>
        public string UIGenderComboBoxSelectedItem = "Other";
        
        /// <summary>
        /// Select '24-44' in 'AgeGroup' combo box
        /// </summary>
        public string UIAgeGroupComboBoxSelectedItem = "24-44";
        
        /// <summary>
        /// Type 'Kenneth' in text box numbered 2 in 'CreateNewPatient' window
        /// </summary>
        public string UIItemEdit1Text = "Kenneth";
        
        /// <summary>
        /// Type 'Adair' in text box numbered 3 in 'CreateNewPatient' window
        /// </summary>
        public string UIItemEdit2Text = "Adair";
        
        /// <summary>
        /// Select 'Hispanic' in 'ethnicity' combo box
        /// </summary>
        public string UIEthnicityComboBoxSelectedItem = "Hispanic";
        
        /// <summary>
        /// Type 'Kid' in text box numbered 4 in 'CreateNewPatient' window
        /// </summary>
        public string UIItemEdit3Text = "Kid";
        
        /// <summary>
        /// Select 'Is Head of Household?' check box
        /// </summary>
        public bool UIIsHeadofHouseholdCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'First Member of Household?' check box
        /// </summary>
        public bool UIFirstMemberofHousehoCheckBoxChecked = true;
        
        /// <summary>
        /// Type '5' in text box
        /// </summary>
        public string UIItemEditText2 = "5";
        
        /// <summary>
        /// Type 'Davis' in text box numbered 2 in 'CreateHousehold' window
        /// </summary>
        public string UIItemEdit1Text1 = "Davis";
        
        /// <summary>
        /// Select '$35,000+' in 'income' combo box
        /// </summary>
        public string UIIncomeComboBoxSelectedItem = "$35,000+";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'insertTest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class insertTestParams
    {
        
        #region Fields
        /// <summary>
        /// Type '5' in text box
        /// </summary>
        public string UIItemEditText = "5";
        
        /// <summary>
        /// Type 'myTest' in text box numbered 2 in 'CreateNewPatient' window
        /// </summary>
        public string UIItemEdit1Text = "myTest";
        
        /// <summary>
        /// Type 'myTestLastName' in text box numbered 3 in 'CreateNewPatient' window
        /// </summary>
        public string UIItemEdit2Text = "myTestLastName";
        
        /// <summary>
        /// Type 'stepchild' in text box numbered 4 in 'CreateNewPatient' window
        /// </summary>
        public string UIItemEdit3Text = "stepchild";
        
        /// <summary>
        /// Select 'Other' in 'Gender' combo box
        /// </summary>
        public string UIGenderComboBoxSelectedItem = "Other";
        
        /// <summary>
        /// Select '70+' in 'AgeGroup' combo box
        /// </summary>
        public string UIAgeGroupComboBoxSelectedItem = "70+";
        
        /// <summary>
        /// Select 'Other' in 'ethnicity' combo box
        /// </summary>
        public string UIEthnicityComboBoxSelectedItem = "Other";
        
        /// <summary>
        /// Select 'Is Head of Household?' check box
        /// </summary>
        public bool UIIsHeadofHouseholdCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'First Member of Household?' check box
        /// </summary>
        public bool UIFirstMemberofHousehoCheckBoxChecked = true;
        
        /// <summary>
        /// Type '3' in text box
        /// </summary>
        public string UIItemEditText1 = "3";
        
        /// <summary>
        /// Type 'myCounty' in text box numbered 2 in 'CreateHousehold' window
        /// </summary>
        public string UIItemEdit1Text1 = "myCounty";
        
        /// <summary>
        /// Select '$35,000+' in 'income' combo box
        /// </summary>
        public string UIIncomeComboBoxSelectedItem = "$35,000+";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestpatientInsert2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestpatientInsert2Params
    {
        
        #region Fields
        /// <summary>
        /// Launch '%ProgramFiles%\Microsoft Visual Studio 14.0\Common7\IDE\PrivateAssemblies\ScriptedSandbox64.exe' with arguments '"Software\Microsoft\VisualStudio\14.0\ScriptedPlugins" "Software\Microsoft\VisualStudio\14.0_Config\ScriptedPlugins" 110418 e70 "file:///C:/Program Files (x86)/Microsoft Visual Studio 14.0/Common7/IDE/PrivateAssemblies/plugin.vs.js"'
        /// </summary>
        public string ExePath = "C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\PrivateAssemblies" +
            "\\ScriptedSandbox64.exe";
        
        /// <summary>
        /// Launch '%ProgramFiles%\Microsoft Visual Studio 14.0\Common7\IDE\PrivateAssemblies\ScriptedSandbox64.exe' with arguments '"Software\Microsoft\VisualStudio\14.0\ScriptedPlugins" "Software\Microsoft\VisualStudio\14.0_Config\ScriptedPlugins" 110418 e70 "file:///C:/Program Files (x86)/Microsoft Visual Studio 14.0/Common7/IDE/PrivateAssemblies/plugin.vs.js"'
        /// </summary>
        public string AlternateExePath = "%ProgramFiles%\\Microsoft Visual Studio 14.0\\Common7\\IDE\\PrivateAssemblies\\Scripte" +
            "dSandbox64.exe";
        
        /// <summary>
        /// Type '666' in text box
        /// </summary>
        public string UIItemEditText = "666";
        
        /// <summary>
        /// Type 'Satan' in text box numbered 2 in 'CreateNewPatient' window
        /// </summary>
        public string UIItemEdit1Text = "Satan";
        
        /// <summary>
        /// Type '{Tab}' in text box numbered 2 in 'CreateNewPatient' window
        /// </summary>
        public string UIItemEdit1SendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'Test' in text box numbered 3 in 'CreateNewPatient' window
        /// </summary>
        public string UIItemEdit2Text = "Test";
        
        /// <summary>
        /// Type 'Lord of Darkness' in text box numbered 4 in 'CreateNewPatient' window
        /// </summary>
        public string UIItemEdit3Text = "Lord of Darkness";
        
        /// <summary>
        /// Select 'Is Head of Household?' check box
        /// </summary>
        public bool UIIsHeadofHouseholdCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'First Member of Household?' check box
        /// </summary>
        public bool UIFirstMemberofHousehoCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Other' in 'Gender' combo box
        /// </summary>
        public string UIGenderComboBoxSelectedItem = "Other";
        
        /// <summary>
        /// Select '0-5' in 'AgeGroup' combo box
        /// </summary>
        public string UIAgeGroupComboBoxSelectedItem = "0-5";
        
        /// <summary>
        /// Select 'Other' in 'ethnicity' combo box
        /// </summary>
        public string UIEthnicityComboBoxSelectedItem = "Other";
        
        /// <summary>
        /// Type '1' in text box
        /// </summary>
        public string UIItemEditText1 = "1";
        
        /// <summary>
        /// Type 'Hell' in text box numbered 2 in 'CreateHousehold' window
        /// </summary>
        public string UIItemEdit1Text1 = "Hell";
        
        /// <summary>
        /// Type '1000000' in text box
        /// </summary>
        public string UIItemEditText2 = "1000000";
        
        /// <summary>
        /// Select '$35,000+' in 'income' combo box
        /// </summary>
        public string UIIncomeComboBoxSelectedItem = "$35,000+";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestOpeningProgram'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestOpeningProgramParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%USERPROFILE%\Desktop\Spring2016\Software Engineering 3\FCS-Funding\FCS_Funding_WPF\FCS_Funding\bin\Debug\FCS_Funding.exe'
        /// </summary>
        public string UILoginWindowExePath = "C:\\Users\\Kenneth\\Desktop\\Spring2016\\Software Engineering 3\\FCS-Funding\\FCS_Fundin" +
            "g_WPF\\FCS_Funding\\bin\\Debug\\FCS_Funding.exe";
        
        /// <summary>
        /// Launch '%USERPROFILE%\Desktop\Spring2016\Software Engineering 3\FCS-Funding\FCS_Funding_WPF\FCS_Funding\bin\Debug\FCS_Funding.exe'
        /// </summary>
        public string UILoginWindowAlternateExePath = "%USERPROFILE%\\Desktop\\Spring2016\\Software Engineering 3\\FCS-Funding\\FCS_Funding_W" +
            "PF\\FCS_Funding\\bin\\Debug\\FCS_Funding.exe";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestInsertPatientGUI'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestInsertPatientGUIParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%USERPROFILE%\Desktop\Spring2016\Software Engineering 3\FCS-Funding\FCS_Funding_WPF\FCS_Funding\bin\Debug\FCS_Funding.exe'
        /// </summary>
        public string UILoginWindowExePath = "C:\\Users\\Kenneth\\Desktop\\Spring2016\\Software Engineering 3\\FCS-Funding\\FCS_Fundin" +
            "g_WPF\\FCS_Funding\\bin\\Debug\\FCS_Funding.exe";
        
        /// <summary>
        /// Launch '%USERPROFILE%\Desktop\Spring2016\Software Engineering 3\FCS-Funding\FCS_Funding_WPF\FCS_Funding\bin\Debug\FCS_Funding.exe'
        /// </summary>
        public string UILoginWindowAlternateExePath = "%USERPROFILE%\\Desktop\\Spring2016\\Software Engineering 3\\FCS-Funding\\FCS_Funding_W" +
            "PF\\FCS_Funding\\bin\\Debug\\FCS_Funding.exe";
        
        /// <summary>
        /// Type '7562' in text box
        /// </summary>
        public string UIItemEditText = "7562";
        
        /// <summary>
        /// Select 'Male' in 'Gender' combo box
        /// </summary>
        public string UIGenderComboBoxSelectedItem = "Male";
        
        /// <summary>
        /// Select '55-69' in 'AgeGroup' combo box
        /// </summary>
        public string UIAgeGroupComboBoxSelectedItem = "55-69";
        
        /// <summary>
        /// Select 'Asian' in 'ethnicity' combo box
        /// </summary>
        public string UIEthnicityComboBoxSelectedItem = "Asian";
        
        /// <summary>
        /// Type 'Fluffy' in text box numbered 2 in 'CreateNewPatient' window
        /// </summary>
        public string UIItemEdit1Text = "Fluffy";
        
        /// <summary>
        /// Type 'Kitten' in text box numbered 3 in 'CreateNewPatient' window
        /// </summary>
        public string UIItemEdit2Text = "Kitten";
        
        /// <summary>
        /// Type 'Child' in text box numbered 4 in 'CreateNewPatient' window
        /// </summary>
        public string UIItemEdit3Text = "Child";
        
        /// <summary>
        /// Select 'Is Head of Household?' check box
        /// </summary>
        public bool UIIsHeadofHouseholdCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'First Member of Household?' check box
        /// </summary>
        public bool UIFirstMemberofHousehoCheckBoxChecked = true;
        
        /// <summary>
        /// Type '5' in text box
        /// </summary>
        public string UIItemEditText1 = "5";
        
        /// <summary>
        /// Type 'Davis' in text box numbered 2 in 'CreateHousehold' window
        /// </summary>
        public string UIItemEdit1Text1 = "Davis";
        
        /// <summary>
        /// Select '$35,000+' in 'income' combo box
        /// </summary>
        public string UIIncomeComboBoxSelectedItem = "$35,000+";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILoginWindow : WpfWindow
    {
        
        public UILoginWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Login";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        
        public WpfEdit UIItemEdit1
        {
            get
            {
                if ((this.mUIItemEdit1 == null))
                {
                    this.mUIItemEdit1 = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit1.SearchProperties[WpfEdit.PropertyNames.Instance] = "2";
                    this.mUIItemEdit1.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIItemEdit1;
            }
        }
        
        public WpfButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUILoginButton.SearchProperties[WpfButton.PropertyNames.Name] = "Login";
                    this.mUILoginButton.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIItemEdit;
        
        private WpfEdit mUIItemEdit1;
        
        private WpfButton mUILoginButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMainWindowWindow : WpfWindow
    {
        
        public UIMainWindowWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIItemTabList UIItemTabList
        {
            get
            {
                if ((this.mUIItemTabList == null))
                {
                    this.mUIItemTabList = new UIItemTabList(this);
                }
                return this.mUIItemTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTabList mUIItemTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemTabList : WpfTabList
    {
        
        public UIItemTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIPatientsTabPage UIPatientsTabPage
        {
            get
            {
                if ((this.mUIPatientsTabPage == null))
                {
                    this.mUIPatientsTabPage = new UIPatientsTabPage(this);
                }
                return this.mUIPatientsTabPage;
            }
        }
        
        public WpfTabPage UIGrantsTabPage
        {
            get
            {
                if ((this.mUIGrantsTabPage == null))
                {
                    this.mUIGrantsTabPage = new WpfTabPage(this);
                    #region Search Criteria
                    this.mUIGrantsTabPage.SearchProperties[WpfTabPage.PropertyNames.Name] = "Grants";
                    this.mUIGrantsTabPage.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIGrantsTabPage;
            }
        }
        #endregion
        
        #region Fields
        private UIPatientsTabPage mUIPatientsTabPage;
        
        private WpfTabPage mUIGrantsTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPatientsTabPage : WpfTabPage
    {
        
        public UIPatientsTabPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Patients";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfButton UICreateNewPatientButton
        {
            get
            {
                if ((this.mUICreateNewPatientButton == null))
                {
                    this.mUICreateNewPatientButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUICreateNewPatientButton.SearchProperties[WpfButton.PropertyNames.Name] = "Create New Patient";
                    this.mUICreateNewPatientButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUICreateNewPatientButton;
            }
        }
        
        public WpfButton UIRefreshButton
        {
            get
            {
                if ((this.mUIRefreshButton == null))
                {
                    this.mUIRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIRefreshButton.SearchProperties[WpfButton.PropertyNames.Name] = "Refresh";
                    this.mUIRefreshButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIRefreshButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUICreateNewPatientButton;
        
        private WpfButton mUIRefreshButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICreateNewPatientWindow : WpfWindow
    {
        
        public UICreateNewPatientWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "CreateNewPatient";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("CreateNewPatient");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("CreateNewPatient");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        
        public WpfComboBox UIGenderComboBox
        {
            get
            {
                if ((this.mUIGenderComboBox == null))
                {
                    this.mUIGenderComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIGenderComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "Gender";
                    this.mUIGenderComboBox.WindowTitles.Add("CreateNewPatient");
                    #endregion
                }
                return this.mUIGenderComboBox;
            }
        }
        
        public WpfComboBox UIAgeGroupComboBox
        {
            get
            {
                if ((this.mUIAgeGroupComboBox == null))
                {
                    this.mUIAgeGroupComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIAgeGroupComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "AgeGroup";
                    this.mUIAgeGroupComboBox.WindowTitles.Add("CreateNewPatient");
                    #endregion
                }
                return this.mUIAgeGroupComboBox;
            }
        }
        
        public WpfEdit UIItemEdit1
        {
            get
            {
                if ((this.mUIItemEdit1 == null))
                {
                    this.mUIItemEdit1 = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit1.SearchProperties[WpfEdit.PropertyNames.Instance] = "2";
                    this.mUIItemEdit1.WindowTitles.Add("CreateNewPatient");
                    #endregion
                }
                return this.mUIItemEdit1;
            }
        }
        
        public WpfEdit UIItemEdit2
        {
            get
            {
                if ((this.mUIItemEdit2 == null))
                {
                    this.mUIItemEdit2 = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit2.SearchProperties[WpfEdit.PropertyNames.Instance] = "3";
                    this.mUIItemEdit2.WindowTitles.Add("CreateNewPatient");
                    #endregion
                }
                return this.mUIItemEdit2;
            }
        }
        
        public WpfComboBox UIEthnicityComboBox
        {
            get
            {
                if ((this.mUIEthnicityComboBox == null))
                {
                    this.mUIEthnicityComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIEthnicityComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ethnicity";
                    this.mUIEthnicityComboBox.WindowTitles.Add("CreateNewPatient");
                    #endregion
                }
                return this.mUIEthnicityComboBox;
            }
        }
        
        public WpfEdit UIItemEdit3
        {
            get
            {
                if ((this.mUIItemEdit3 == null))
                {
                    this.mUIItemEdit3 = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit3.SearchProperties[WpfEdit.PropertyNames.Instance] = "4";
                    this.mUIItemEdit3.WindowTitles.Add("CreateNewPatient");
                    #endregion
                }
                return this.mUIItemEdit3;
            }
        }
        
        public WpfCheckBox UIIsHeadofHouseholdCheckBox
        {
            get
            {
                if ((this.mUIIsHeadofHouseholdCheckBox == null))
                {
                    this.mUIIsHeadofHouseholdCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUIIsHeadofHouseholdCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Is Head of Household?";
                    this.mUIIsHeadofHouseholdCheckBox.WindowTitles.Add("CreateNewPatient");
                    #endregion
                }
                return this.mUIIsHeadofHouseholdCheckBox;
            }
        }
        
        public WpfCheckBox UIFirstMemberofHousehoCheckBox
        {
            get
            {
                if ((this.mUIFirstMemberofHousehoCheckBox == null))
                {
                    this.mUIFirstMemberofHousehoCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUIFirstMemberofHousehoCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "First Member of Household?";
                    this.mUIFirstMemberofHousehoCheckBox.WindowTitles.Add("CreateNewPatient");
                    #endregion
                }
                return this.mUIFirstMemberofHousehoCheckBox;
            }
        }
        
        public WpfButton UIAddClientButton
        {
            get
            {
                if ((this.mUIAddClientButton == null))
                {
                    this.mUIAddClientButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIAddClientButton.SearchProperties[WpfButton.PropertyNames.Name] = "Add Client";
                    this.mUIAddClientButton.WindowTitles.Add("CreateNewPatient");
                    #endregion
                }
                return this.mUIAddClientButton;
            }
        }
        
        public WpfEdit UIFamily_OQEdit
        {
            get
            {
                if ((this.mUIFamily_OQEdit == null))
                {
                    this.mUIFamily_OQEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIFamily_OQEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Family_OQ";
                    this.mUIFamily_OQEdit.WindowTitles.Add("CreateNewPatient");
                    #endregion
                }
                return this.mUIFamily_OQEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIItemEdit;
        
        private WpfComboBox mUIGenderComboBox;
        
        private WpfComboBox mUIAgeGroupComboBox;
        
        private WpfEdit mUIItemEdit1;
        
        private WpfEdit mUIItemEdit2;
        
        private WpfComboBox mUIEthnicityComboBox;
        
        private WpfEdit mUIItemEdit3;
        
        private WpfCheckBox mUIIsHeadofHouseholdCheckBox;
        
        private WpfCheckBox mUIFirstMemberofHousehoCheckBox;
        
        private WpfButton mUIAddClientButton;
        
        private WpfEdit mUIFamily_OQEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICreateHouseholdWindow : WpfWindow
    {
        
        public UICreateHouseholdWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "CreateHousehold";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("CreateHousehold");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("CreateHousehold");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        
        public WpfEdit UIItemEdit1
        {
            get
            {
                if ((this.mUIItemEdit1 == null))
                {
                    this.mUIItemEdit1 = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit1.SearchProperties[WpfEdit.PropertyNames.Instance] = "2";
                    this.mUIItemEdit1.WindowTitles.Add("CreateHousehold");
                    #endregion
                }
                return this.mUIItemEdit1;
            }
        }
        
        public WpfComboBox UIIncomeComboBox
        {
            get
            {
                if ((this.mUIIncomeComboBox == null))
                {
                    this.mUIIncomeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIIncomeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "income";
                    this.mUIIncomeComboBox.WindowTitles.Add("CreateHousehold");
                    #endregion
                }
                return this.mUIIncomeComboBox;
            }
        }
        
        public WpfButton UIAddHouseholdButton
        {
            get
            {
                if ((this.mUIAddHouseholdButton == null))
                {
                    this.mUIAddHouseholdButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIAddHouseholdButton.SearchProperties[WpfButton.PropertyNames.Name] = "Add Household";
                    this.mUIAddHouseholdButton.WindowTitles.Add("CreateHousehold");
                    #endregion
                }
                return this.mUIAddHouseholdButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIItemEdit;
        
        private WpfEdit mUIItemEdit1;
        
        private WpfComboBox mUIIncomeComboBox;
        
        private WpfButton mUIAddHouseholdButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "OK";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("OK");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("OK");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDebugWindow : WinWindow
    {
        
        public UIDebugWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Debug";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIFCS_FundingexeListItem UIFCS_FundingexeListItem
        {
            get
            {
                if ((this.mUIFCS_FundingexeListItem == null))
                {
                    this.mUIFCS_FundingexeListItem = new UIFCS_FundingexeListItem(this);
                }
                return this.mUIFCS_FundingexeListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIFCS_FundingexeListItem mUIFCS_FundingexeListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIFCS_FundingexeListItem : WinListItem
    {
        
        public UIFCS_FundingexeListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "FCS_Funding.exe";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow1 mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            #endregion
        }
        
        #region Properties
        public WinControl UIItemDialog
        {
            get
            {
                if ((this.mUIItemDialog == null))
                {
                    this.mUIItemDialog = new WinControl(this);
                    #region Search Criteria
                    this.mUIItemDialog.SearchProperties[UITestControl.PropertyNames.ControlType] = "Dialog";
                    #endregion
                }
                return this.mUIItemDialog;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIItemDialog;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMainWindowWindow1 : WinWindow
    {
        
        public UIMainWindowWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
}
